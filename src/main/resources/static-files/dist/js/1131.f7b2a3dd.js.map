{"version":3,"file":"js/1131.f7b2a3dd.js","mappings":"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","sources":["webpack://velzon/./src/common/getChartColorsArray.js","webpack://velzon/./src/views/charts/apex/column/index.vue","webpack://velzon/./src/views/charts/apex/column/data.js","webpack://velzon/./src/views/charts/apex/column/index.vue?a6d9","webpack://velzon/./src/components/page-header.vue","webpack://velzon/./src/components/page-header.vue?46f7"],"sourcesContent":["const getChartColorsArray = (colors) => {\r\n    colors = JSON.parse(colors);\r\n    return colors.map(function (value) {\r\n        var newValue = value.replace(\" \", \"\");\r\n        if (newValue.indexOf(\",\") === -1) {\r\n            var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\r\n            if (color) {\r\n                color = color.replace(\" \", \"\");\r\n                return color;\r\n            }\r\n            else return newValue;\r\n        } else {\r\n            var val = value.split(',');\r\n            if (val.length == 2) {\r\n                var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\r\n                rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\r\n                return rgbaColor;\r\n            } else {\r\n                return newValue;\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nexport default getChartColorsArray;","<script>\r\nimport Layout from \"@/layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\n\r\nimport {\r\n  basicColumnChart,\r\n  columnDatalabelChart,\r\n  stackedColumnsChart,\r\n  columnStackedChart,\r\n  columnMarkersChart,\r\n  columnRotatedLabel,\r\n  columnNegativeChart,\r\n  rangeColumnChart,\r\n  chartYearOption,\r\n  quarterChartOption,\r\n  distributedColumnchart,\r\n  dynamicQuarterLoadedChart,\r\n  groupedStackedChart,\r\n  dumbbellChart\r\n} from \"./data\";\r\n\r\n/**\r\n * Column Charts component\r\n */\r\nexport default {\r\n  data() {\r\n    return {\r\n      basicColumnChart: basicColumnChart,\r\n      columnDatalabelChart: columnDatalabelChart,\r\n      stackedColumnsChart: stackedColumnsChart,\r\n      columnStackedChart: columnStackedChart,\r\n      columnMarkersChart: columnMarkersChart,\r\n      columnRotatedLabel: columnRotatedLabel,\r\n      columnNegativeChart: columnNegativeChart,\r\n      rangeColumnChart: rangeColumnChart,\r\n      chartYearOption: chartYearOption,\r\n      quarterChartOption: quarterChartOption,\r\n      distributedColumnchart: distributedColumnchart,\r\n      dynamicQuarterLoadedChart: dynamicQuarterLoadedChart,\r\n      groupedStackedChart: groupedStackedChart,\r\n      dumbbellChart: dumbbellChart,\r\n    };\r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader title=\"Column Charts\" pageTitle=\"Apexcharts\" />\r\n    <BRow>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Basic Column Charts</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"basicColumnChart.series\"\r\n              :options=\"basicColumnChart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Column with Data Labels</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"columnDatalabelChart.series\"\r\n              :options=\"columnDatalabelChart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n    </BRow>\r\n\r\n    <BRow>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Stacked Column Charts</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"stackedColumnsChart.series\"\r\n              :options=\"stackedColumnsChart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Stacked Column 100</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"columnStackedChart.series\"\r\n              :options=\"columnStackedChart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n    </BRow>\r\n    <BRow>\r\n      <BCol xl=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader>\r\n            <BCardTitle class=\"mb-0\">Grouped Stacked Columns</BCardTitle>\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"groupedStackedChart.series\"\r\n              :options=\"groupedStackedChart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n\r\n      <BCol xl=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader>\r\n            <BCardTitle class=\"mb-0\">Dumbbell Chart</BCardTitle>\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"dumbbellChart.series\"\r\n              :options=\"dumbbellChart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n\r\n    </BRow>\r\n    <BRow>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Column with Markers</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"columnMarkersChart.series\"\r\n              :options=\"columnMarkersChart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Column with Rotated Labels</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"columnRotatedLabel.series\"\r\n              :options=\"columnRotatedLabel.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n    </BRow>\r\n\r\n    <BRow>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Column with Nagetive Values</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"columnNegativeChart.series\"\r\n              :options=\"columnNegativeChart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Range Column Chart</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"rangeColumnChart.series\"\r\n              :options=\"rangeColumnChart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n    </BRow>\r\n\r\n    <BRow>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Dynamic Loaded Chart</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <div id=\"dynamicloadedchart-wrap\">\r\n              <div id=\"chart-year\">\r\n                <apexchart type=\"bar\" height=\"330\" ref=\"chart\" :options=\"chartYearOption.chartOptions\"\r\n                  :series=\"chartYearOption.series\"></apexchart>\r\n              </div>\r\n              <div id=\"chart-quarter\">\r\n                <apexchart type=\"bar\" height=\"330\" ref=\"chartQuarter\" :options=\"dynamicQuarterLoadedChart.chartOptions\"\r\n                  :series=\"dynamicQuarterLoadedChart.series\"></apexchart>\r\n              </div>\r\n            </div>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardHeader class=\"\r\n              justify-content-between\r\n              d-flex\r\n              align-items-center\r\n            \">\r\n            <BCardTitle>Distributed Columns Charts</BCardTitle>\r\n\r\n          </BCardHeader>\r\n          <BCardBody>\r\n            <apexchart class=\"apex-charts\" height=\"350\" dir=\"ltr\" :series=\"distributedColumnchart.series\"\r\n              :options=\"distributedColumnchart.chartOptions\"></apexchart>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n    </BRow>\r\n  </Layout>\r\n</template>\r\n","// Basic Column Chart\r\nimport getChartColorsArray from \"@/common/getChartColorsArray\";\r\n\r\nconst basicColumnChart = {\r\n    series: [{\r\n        name: \"Net Profit\",\r\n        data: [46, 57, 59, 54, 62, 58, 64, 60, 66],\r\n    },\r\n    {\r\n        name: \"Revenue\",\r\n        data: [74, 83, 102, 97, 86, 106, 93, 114, 94],\r\n    },\r\n    {\r\n        name: \"Free Cash Flow\",\r\n        data: [37, 42, 38, 26, 47, 50, 54, 55, 43],\r\n    },\r\n    ],\r\n    chartOptions: {\r\n        chart: {\r\n            height: 350,\r\n            type: \"bar\",\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: \"45%\",\r\n                endingShape: \"rounded\",\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: [\"transparent\"],\r\n        },\r\n        colors: getChartColorsArray('[\"--vz-danger\", \"--vz-primary\", \"--vz-success\"]'),\r\n        xaxis: {\r\n            categories: [\r\n                \"Feb\",\r\n                \"Mar\",\r\n                \"Apr\",\r\n                \"May\",\r\n                \"Jun\",\r\n                \"Jul\",\r\n                \"Aug\",\r\n                \"Sep\",\r\n                \"Oct\",\r\n            ],\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: \"$ (thousands)\",\r\n            },\r\n        },\r\n        grid: {\r\n            borderColor: \"#f1f1f1\",\r\n        },\r\n        fill: {\r\n            opacity: 1,\r\n        },\r\n        tooltip: {\r\n            y: {\r\n                formatter: function (val) {\r\n                    return \"$ \" + val + \" thousands\";\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\n// Column with Datalabels\r\n\r\nconst columnDatalabelChart = {\r\n    series: [{\r\n        name: \"Inflation\",\r\n        data: [2.5, 3.2, 5.0, 10.1, 4.2, 3.8, 3, 2.4, 4.0, 1.2, 3.5, 0.8],\r\n    },],\r\n    chartOptions: {\r\n        chart: {\r\n            height: 350,\r\n            type: \"bar\",\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    position: \"top\", // top, center, bottom\r\n                },\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n            formatter: function (val) {\r\n                return val + \"%\";\r\n            },\r\n            offsetY: -20,\r\n            style: {\r\n                fontSize: \"12px\",\r\n                colors: [\"#adb5bd\"],\r\n            },\r\n        },\r\n        colors: getChartColorsArray('[\"--vz-success\"]'),\r\n        grid: {\r\n            borderColor: \"#f1f1f1\",\r\n        },\r\n        xaxis: {\r\n            categories: [\r\n                \"Jan\",\r\n                \"Feb\",\r\n                \"Mar\",\r\n                \"Apr\",\r\n                \"May\",\r\n                \"Jun\",\r\n                \"Jul\",\r\n                \"Aug\",\r\n                \"Sep\",\r\n                \"Oct\",\r\n                \"Nov\",\r\n                \"Dec\",\r\n            ],\r\n            position: \"top\",\r\n            labels: {\r\n                offsetY: -18,\r\n            },\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            axisTicks: {\r\n                show: false,\r\n            },\r\n            crosshairs: {\r\n                fill: {\r\n                    type: \"gradient\",\r\n                    gradient: {\r\n                        colorFrom: \"#D8E3F0\",\r\n                        colorTo: \"#BED1E6\",\r\n                        stops: [0, 100],\r\n                        opacityFrom: 0.4,\r\n                        opacityTo: 0.5,\r\n                    },\r\n                },\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                offsetY: -35,\r\n            },\r\n        },\r\n        fill: {\r\n            gradient: {\r\n                shade: \"light\",\r\n                type: \"horizontal\",\r\n                shadeIntensity: 0.25,\r\n                gradientToColors: undefined,\r\n                inverseColors: true,\r\n                opacityFrom: 1,\r\n                opacityTo: 1,\r\n                stops: [50, 0, 100, 100],\r\n            },\r\n        },\r\n        yaxis: {\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            axisTicks: {\r\n                show: false,\r\n            },\r\n            labels: {\r\n                show: false,\r\n                formatter: function (val) {\r\n                    return val + \"%\";\r\n                },\r\n            },\r\n        },\r\n        title: {\r\n            text: \"Monthly Inflation in Argentina, 2002\",\r\n            floating: true,\r\n            offsetY: 320,\r\n            align: \"center\",\r\n            style: {\r\n                color: \"#444\",\r\n                fontWeight: 500,\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\n// Stacked Columns Charts\r\n\r\nconst stackedColumnsChart = {\r\n    series: [{\r\n        name: \"PRODUCT A\",\r\n        data: [44, 55, 41, 67, 22, 43],\r\n    },\r\n    {\r\n        name: \"PRODUCT B\",\r\n        data: [13, 23, 20, 8, 13, 27],\r\n    },\r\n    {\r\n        name: \"PRODUCT C\",\r\n        data: [11, 17, 15, 15, 21, 14],\r\n    },\r\n    {\r\n        name: \"PRODUCT D\",\r\n        data: [21, 7, 25, 13, 22, 8],\r\n    },\r\n    ],\r\n    chartOptions: {\r\n        chart: {\r\n            type: \"bar\",\r\n            height: 350,\r\n            stacked: true,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n            zoom: {\r\n                enabled: true,\r\n            },\r\n        },\r\n        responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n                legend: {\r\n                    position: \"bottom\",\r\n                    offsetX: -10,\r\n                    offsetY: 0,\r\n                },\r\n            },\r\n        },],\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                borderRadius: 10,\r\n            },\r\n        },\r\n        xaxis: {\r\n            type: \"datetime\",\r\n            categories: [\r\n                \"01/01/2011 GMT\",\r\n                \"01/02/2011 GMT\",\r\n                \"01/03/2011 GMT\",\r\n                \"01/04/2011 GMT\",\r\n                \"01/05/2011 GMT\",\r\n                \"01/06/2011 GMT\",\r\n            ],\r\n        },\r\n        legend: {\r\n            position: \"right\",\r\n            offsetY: 40,\r\n        },\r\n        fill: {\r\n            opacity: 1,\r\n        },\r\n        colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\"]'),\r\n    },\r\n};\r\n\r\n// 100% Stacked Column Chart\r\n\r\nconst columnStackedChart = {\r\n    series: [{\r\n        name: \"PRODUCT A\",\r\n        data: [44, 55, 41, 67, 22, 43, 21, 49],\r\n    },\r\n    {\r\n        name: \"PRODUCT B\",\r\n        data: [13, 23, 20, 8, 13, 27, 33, 12],\r\n    },\r\n    {\r\n        name: \"PRODUCT C\",\r\n        data: [11, 17, 15, 15, 21, 14, 15, 13],\r\n    },\r\n    ],\r\n    chartOptions: {\r\n        chart: {\r\n            type: \"bar\",\r\n            height: 350,\r\n            stacked: true,\r\n            stackType: \"100%\",\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n                legend: {\r\n                    position: \"bottom\",\r\n                    offsetX: -10,\r\n                    offsetY: 0,\r\n                },\r\n            },\r\n        },],\r\n        xaxis: {\r\n            categories: [\r\n                \"2011 Q1\",\r\n                \"2011 Q2\",\r\n                \"2011 Q3\",\r\n                \"2011 Q4\",\r\n                \"2012 Q1\",\r\n                \"2012 Q2\",\r\n                \"2012 Q3\",\r\n                \"2012 Q4\",\r\n            ],\r\n        },\r\n        fill: {\r\n            opacity: 1,\r\n        },\r\n        legend: {\r\n            position: \"right\",\r\n            offsetX: 0,\r\n            offsetY: 50,\r\n        },\r\n        colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\"]'),\r\n    },\r\n};\r\n\r\n// column with Markers\r\n\r\nconst columnMarkersChart = {\r\n    series: [{\r\n        name: \"Actual\",\r\n        data: [{\r\n            x: \"2011\",\r\n            y: 1292,\r\n            goals: [{\r\n                name: \"Expected\",\r\n                value: 1400,\r\n                strokeWidth: 5,\r\n                strokeColor: \"#775DD0\",\r\n            },],\r\n        },\r\n        {\r\n            x: \"2012\",\r\n            y: 4432,\r\n            goals: [{\r\n                name: \"Expected\",\r\n                value: 5400,\r\n                strokeWidth: 5,\r\n                strokeColor: \"#775DD0\",\r\n            },],\r\n        },\r\n        {\r\n            x: \"2013\",\r\n            y: 5423,\r\n            goals: [{\r\n                name: \"Expected\",\r\n                value: 5200,\r\n                strokeWidth: 5,\r\n                strokeColor: \"#775DD0\",\r\n            },],\r\n        },\r\n        {\r\n            x: \"2014\",\r\n            y: 6653,\r\n            goals: [{\r\n                name: \"Expected\",\r\n                value: 6500,\r\n                strokeWidth: 5,\r\n                strokeColor: \"#775DD0\",\r\n            },],\r\n        },\r\n        {\r\n            x: \"2015\",\r\n            y: 8133,\r\n            goals: [{\r\n                name: \"Expected\",\r\n                value: 6600,\r\n                strokeWidth: 5,\r\n                strokeColor: \"#775DD0\",\r\n            },],\r\n        },\r\n        {\r\n            x: \"2016\",\r\n            y: 7132,\r\n            goals: [{\r\n                name: \"Expected\",\r\n                value: 7500,\r\n                strokeWidth: 5,\r\n                strokeColor: \"#775DD0\",\r\n            },],\r\n        },\r\n        {\r\n            x: \"2017\",\r\n            y: 7332,\r\n            goals: [{\r\n                name: \"Expected\",\r\n                value: 8700,\r\n                strokeWidth: 5,\r\n                strokeColor: \"#775DD0\",\r\n            },],\r\n        },\r\n        {\r\n            x: \"2018\",\r\n            y: 6553,\r\n            goals: [{\r\n                name: \"Expected\",\r\n                value: 7300,\r\n                strokeWidth: 5,\r\n                strokeColor: \"#775DD0\",\r\n            },],\r\n        },\r\n        ],\r\n    },],\r\n    chartOptions: {\r\n        chart: {\r\n            height: 350,\r\n            type: \"bar\",\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: \"30%\",\r\n            },\r\n        },\r\n        colors: getChartColorsArray('[\"--vz-success\", \"--vz-primary\"]'),\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        legend: {\r\n            show: true,\r\n            showForSingleSeries: true,\r\n            customLegendItems: [\"Actual\", \"Expected\"],\r\n            markers: {\r\n                fillColors: [\"#63ad6f\", \"#564ab1\"],\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\n//  Column with Rotated Labels\r\n\r\nconst columnRotatedLabel = {\r\n    series: [{\r\n        name: \"Servings\",\r\n        data: [44, 55, 41, 67, 22, 43, 21, 33, 45, 31, 87, 65, 35],\r\n    },],\r\n    chartOptions: {\r\n        colors: getChartColorsArray('[\"--vz-info\"]'),\r\n        annotations: {\r\n            points: [{\r\n                x: \"Bananas\",\r\n                seriesIndex: 0,\r\n                label: {\r\n                    borderColor: \"#775DD0\",\r\n                    offsetY: 0,\r\n                    style: {\r\n                        color: \"#fff\",\r\n                        background: \"#775DD0\",\r\n                    },\r\n                    text: \"Bananas are good\",\r\n                },\r\n            },],\r\n        },\r\n        chart: {\r\n            height: 350,\r\n            type: \"bar\",\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                borderRadius: 10,\r\n                columnWidth: \"50%\",\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            width: 2,\r\n        },\r\n        xaxis: {\r\n            labels: {\r\n                rotate: -45,\r\n            },\r\n            categories: [\r\n                \"Apples\",\r\n                \"Oranges\",\r\n                \"Strawberries\",\r\n                \"Pineapples\",\r\n                \"Mangoes\",\r\n                \"Bananas\",\r\n                \"Blackberries\",\r\n                \"Pears\",\r\n                \"Watermelons\",\r\n                \"Cherries\",\r\n                \"Pomegranates\",\r\n                \"Tangerines\",\r\n                \"Papayas\",\r\n            ],\r\n            tickPlacement: \"on\",\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: \"Servings\",\r\n            },\r\n        },\r\n        fill: {\r\n            type: \"gradient\",\r\n            gradient: {\r\n                shade: \"light\",\r\n                type: \"horizontal\",\r\n                shadeIntensity: 0.25,\r\n                gradientToColors: undefined,\r\n                inverseColors: true,\r\n                opacityFrom: 0.85,\r\n                opacityTo: 0.85,\r\n                stops: [50, 0, 100],\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\n// Column with Negative Values\r\n\r\nconst columnNegativeChart = {\r\n    series: [{\r\n        name: \"Cash Flow\",\r\n        data: [\r\n            1.45,\r\n            5.42,\r\n            5.9,\r\n            -0.42,\r\n            -12.6,\r\n            -18.1,\r\n            -18.2,\r\n            -14.16,\r\n            -11.1,\r\n            -6.09,\r\n            0.34,\r\n            3.88,\r\n            13.07,\r\n            5.8,\r\n            2,\r\n            7.37,\r\n            8.1,\r\n            13.57,\r\n            15.75,\r\n            17.1,\r\n            19.8,\r\n            -27.03,\r\n            -54.4,\r\n            -47.2,\r\n            -43.3,\r\n            -18.6,\r\n            -48.6,\r\n            -41.1,\r\n            -39.6,\r\n            -37.6,\r\n            -29.4,\r\n            -21.4,\r\n            -2.4,\r\n        ],\r\n    },],\r\n    chartOptions: {\r\n        colors: getChartColorsArray('[\"--vz-success\", \"--vz-primary\", \"--vz-warning\"]'),\r\n        chart: {\r\n            type: \"bar\",\r\n            height: 350,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                colors: {\r\n                    ranges: [{\r\n                        from: -100,\r\n                        to: -46,\r\n                        color: \"#f56e6e\",\r\n                    },\r\n                    {\r\n                        from: -45,\r\n                        to: 0,\r\n                        color: \"#f7cc53\",\r\n                    },\r\n                    ],\r\n                },\r\n                columnWidth: \"80%\",\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: \"Growth\",\r\n            },\r\n            labels: {\r\n                formatter: function (y) {\r\n                    return y.toFixed(0) + \"%\";\r\n                },\r\n            },\r\n        },\r\n        xaxis: {\r\n            type: \"datetime\",\r\n            categories: [\r\n                \"2011-01-01\",\r\n                \"2011-02-01\",\r\n                \"2011-03-01\",\r\n                \"2011-04-01\",\r\n                \"2011-05-01\",\r\n                \"2011-06-01\",\r\n                \"2011-07-01\",\r\n                \"2011-08-01\",\r\n                \"2011-09-01\",\r\n                \"2011-10-01\",\r\n                \"2011-11-01\",\r\n                \"2011-12-01\",\r\n                \"2012-01-01\",\r\n                \"2012-02-01\",\r\n                \"2012-03-01\",\r\n                \"2012-04-01\",\r\n                \"2012-05-01\",\r\n                \"2012-06-01\",\r\n                \"2012-07-01\",\r\n                \"2012-08-01\",\r\n                \"2012-09-01\",\r\n                \"2012-10-01\",\r\n                \"2012-11-01\",\r\n                \"2012-12-01\",\r\n                \"2013-01-01\",\r\n                \"2013-02-01\",\r\n                \"2013-03-01\",\r\n                \"2013-04-01\",\r\n                \"2013-05-01\",\r\n                \"2013-06-01\",\r\n                \"2013-07-01\",\r\n                \"2013-08-01\",\r\n                \"2013-09-01\",\r\n            ],\r\n            labels: {\r\n                rotate: -90,\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\n// Range Column Chart\r\n\r\nconst rangeColumnChart = {\r\n    series: [{\r\n        data: [{\r\n            x: \"Team A\",\r\n            y: [1, 5],\r\n        },\r\n        {\r\n            x: \"Team B\",\r\n            y: [4, 6],\r\n        },\r\n        {\r\n            x: \"Team C\",\r\n            y: [5, 8],\r\n        },\r\n        {\r\n            x: \"Team D\",\r\n            y: [3, 11],\r\n        },\r\n        ],\r\n    },\r\n    {\r\n        data: [{\r\n            x: \"Team A\",\r\n            y: [2, 6],\r\n        },\r\n        {\r\n            x: \"Team B\",\r\n            y: [1, 3],\r\n        },\r\n        {\r\n            x: \"Team C\",\r\n            y: [7, 8],\r\n        },\r\n        {\r\n            x: \"Team D\",\r\n            y: [5, 9],\r\n        },\r\n        ],\r\n    },\r\n    ],\r\n    chartOptions: {\r\n        chart: {\r\n            type: \"rangeBar\",\r\n            height: 335,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        },\r\n        legend: {\r\n            show: false,\r\n        },\r\n        colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]   '),\r\n    },\r\n};\r\n\r\n// dynamic series data\r\nfunction makeData() {\r\n    var dataSet = shuffleArray(arrayData);\r\n\r\n    var dataYearSeries = [{\r\n        x: \"2011\",\r\n        y: dataSet[0].y,\r\n        color: colors[0],\r\n        quarters: dataSet[0].quarters,\r\n    },\r\n    {\r\n        x: \"2012\",\r\n        y: dataSet[1].y,\r\n        color: colors[1],\r\n        quarters: dataSet[1].quarters,\r\n    },\r\n    {\r\n        x: \"2013\",\r\n        y: dataSet[2].y,\r\n        color: colors[2],\r\n        quarters: dataSet[2].quarters,\r\n    },\r\n    {\r\n        x: \"2014\",\r\n        y: dataSet[3].y,\r\n        color: colors[3],\r\n        quarters: dataSet[3].quarters,\r\n    },\r\n    {\r\n        x: \"2015\",\r\n        y: dataSet[4].y,\r\n        color: colors[4],\r\n        quarters: dataSet[4].quarters,\r\n    },\r\n    {\r\n        x: \"2016\",\r\n        y: dataSet[5].y,\r\n        color: colors[5],\r\n        quarters: dataSet[5].quarters,\r\n    },\r\n    ];\r\n\r\n    return dataYearSeries;\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction updateQuarterChart(sourceChart, destChartIDToUpdate) {\r\n    var series = [];\r\n    var seriesIndex = 0;\r\n    var colors = [];\r\n\r\n    if (sourceChart.w.globals.selectedDataPoints[0]) {\r\n        var selectedPoints = sourceChart.w.globals.selectedDataPoints;\r\n        for (var i = 0; i < selectedPoints[seriesIndex].length; i++) {\r\n            var selectedIndex = selectedPoints[seriesIndex][i];\r\n            var yearSeries = sourceChart.w.config.series[seriesIndex];\r\n            series.push({\r\n                name: yearSeries.data[selectedIndex].x,\r\n                data: yearSeries.data[selectedIndex].quarters,\r\n            });\r\n            colors.push(yearSeries.data[selectedIndex].color);\r\n        }\r\n\r\n        if (series.length === 0)\r\n            series = [{\r\n                data: [],\r\n            },];\r\n\r\n        return window.ApexCharts.exec(destChartIDToUpdate, \"updateOptions\", {\r\n            series: series,\r\n            colors: colors,\r\n            fill: {\r\n                colors: colors,\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nconst colors = getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-dark\", \"--vz-info\"]');\r\n\r\nexport const arrayData = [{\r\n    y: 400,\r\n    quarters: [{\r\n        x: \"Q1\",\r\n        y: 120,\r\n    },\r\n    {\r\n        x: \"Q2\",\r\n        y: 90,\r\n    },\r\n    {\r\n        x: \"Q3\",\r\n        y: 100,\r\n    },\r\n    {\r\n        x: \"Q4\",\r\n        y: 90,\r\n    },\r\n    ],\r\n},\r\n{\r\n    y: 430,\r\n    quarters: [{\r\n        x: \"Q1\",\r\n        y: 120,\r\n    },\r\n    {\r\n        x: \"Q2\",\r\n        y: 110,\r\n    },\r\n    {\r\n        x: \"Q3\",\r\n        y: 90,\r\n    },\r\n    {\r\n        x: \"Q4\",\r\n        y: 110,\r\n    },\r\n    ],\r\n},\r\n{\r\n    y: 448,\r\n    quarters: [{\r\n        x: \"Q1\",\r\n        y: 70,\r\n    },\r\n    {\r\n        x: \"Q2\",\r\n        y: 100,\r\n    },\r\n    {\r\n        x: \"Q3\",\r\n        y: 140,\r\n    },\r\n    {\r\n        x: \"Q4\",\r\n        y: 138,\r\n    },\r\n    ],\r\n},\r\n{\r\n    y: 470,\r\n    quarters: [{\r\n        x: \"Q1\",\r\n        y: 150,\r\n    },\r\n    {\r\n        x: \"Q2\",\r\n        y: 60,\r\n    },\r\n    {\r\n        x: \"Q3\",\r\n        y: 190,\r\n    },\r\n    {\r\n        x: \"Q4\",\r\n        y: 70,\r\n    },\r\n    ],\r\n},\r\n{\r\n    y: 540,\r\n    quarters: [{\r\n        x: \"Q1\",\r\n        y: 120,\r\n    },\r\n    {\r\n        x: \"Q2\",\r\n        y: 120,\r\n    },\r\n    {\r\n        x: \"Q3\",\r\n        y: 130,\r\n    },\r\n    {\r\n        x: \"Q4\",\r\n        y: 170,\r\n    },\r\n    ],\r\n},\r\n{\r\n    y: 580,\r\n    quarters: [{\r\n        x: \"Q1\",\r\n        y: 170,\r\n    },\r\n    {\r\n        x: \"Q2\",\r\n        y: 130,\r\n    },\r\n    {\r\n        x: \"Q3\",\r\n        y: 120,\r\n    },\r\n    {\r\n        x: \"Q4\",\r\n        y: 160,\r\n    },\r\n    ],\r\n},\r\n];\r\n\r\nconst chartYearOption = {\r\n    series: [{\r\n        name: \"year\",\r\n        data: makeData(),\r\n    },],\r\n    chartOptions: {\r\n        chart: {\r\n            id: \"barYear\",\r\n            height: 400,\r\n            width: \"100%\",\r\n            type: \"bar\",\r\n            events: {\r\n                dataPointSelection: (e, chart, opts) => {\r\n                    var quarterChartEl = document.querySelector(\"#chart-quarter\");\r\n                    var yearChartEl = document.querySelector(\"#chart-year\");\r\n\r\n                    if (opts.selectedDataPoints[0].length === 1) {\r\n                        if (quarterChartEl.classList.contains(\"active\")) {\r\n                            updateQuarterChart(chart, \"barQuarter\");\r\n                        } else {\r\n                            yearChartEl.classList.add(\"chart-quarter-activated\");\r\n                            quarterChartEl.classList.add(\"active\");\r\n                            updateQuarterChart(chart, \"barQuarter\");\r\n                        }\r\n                    } else {\r\n                        updateQuarterChart(chart, \"barQuarter\");\r\n                    }\r\n\r\n                    if (opts.selectedDataPoints[0].length === 0) {\r\n                        yearChartEl.classList.remove(\"chart-quarter-activated\");\r\n                        quarterChartEl.classList.remove(\"active\");\r\n                    }\r\n                },\r\n                updated: (chart) => {\r\n                    updateQuarterChart(chart, \"barQuarter\");\r\n                },\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                distributed: true,\r\n                horizontal: true,\r\n                barHeight: \"75%\",\r\n                dataLabels: {\r\n                    position: \"bottom\",\r\n                },\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n            textAnchor: \"start\",\r\n            style: {\r\n                colors: [\"#fff\"],\r\n            },\r\n            formatter: function (val, opt) {\r\n                return opt.w.globals.labels[opt.dataPointIndex];\r\n            },\r\n            offsetX: 0,\r\n            dropShadow: {\r\n                enabled: true,\r\n            },\r\n        },\r\n        colors: colors,\r\n        states: {\r\n            normal: {\r\n                filter: {\r\n                    type: \"desaturate\",\r\n                },\r\n            },\r\n            active: {\r\n                allowMultipleDataPointsSelection: true,\r\n                filter: {\r\n                    type: \"darken\",\r\n                    value: 1,\r\n                },\r\n            },\r\n        },\r\n        tooltip: {\r\n            x: {\r\n                show: false,\r\n            },\r\n        },\r\n        title: {\r\n            text: \"Yearly Results\",\r\n            offsetX: 15,\r\n        },\r\n        subtitle: {\r\n            text: \"(Click on bar to see details)\",\r\n            offsetX: 15,\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                show: false,\r\n            },\r\n        },\r\n        legend: {\r\n            show: false\r\n        }\r\n    },\r\n};\r\n\r\nconst quarterChartOption = {\r\n    series: [{\r\n        data: [],\r\n    },],\r\n    chartOptions: {\r\n        chart: {\r\n            id: \"barQuarter\",\r\n            height: 330,\r\n            width: \"100%\",\r\n            type: \"bar\",\r\n            stacked: true,\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: \"50%\",\r\n                horizontal: false,\r\n            },\r\n        },\r\n        legend: {\r\n            show: false,\r\n        },\r\n        grid: {\r\n            yaxis: {\r\n                lines: {\r\n                    show: false,\r\n                },\r\n            },\r\n            xaxis: {\r\n                lines: {\r\n                    show: true,\r\n                },\r\n            },\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                show: false,\r\n            },\r\n        },\r\n        title: {\r\n            text: \"Quarterly Results\",\r\n            offsetX: 10,\r\n            style: {\r\n                fontWeight: 600,\r\n            },\r\n        },\r\n        tooltip: {\r\n            x: {\r\n                formatter: function (val, opts) {\r\n                    return opts.w.globals.seriesNames[opts.seriesIndex];\r\n                },\r\n            },\r\n            y: {\r\n                title: {\r\n                    formatter: function (val, opts) {\r\n                        return opts.w.globals.labels[opts.dataPointIndex];\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\n// Distributed Columns Charts\r\n\r\nconst distributedColumnchart = {\r\n    series: [{\r\n        data: [21, 22, 10, 28, 16, 21, 13, 30],\r\n    },],\r\n    chartOptions: {\r\n        chart: {\r\n            height: 350,\r\n            type: \"bar\",\r\n            events: {\r\n                click: function () {\r\n                    // console.log(chart, w, e)\r\n                },\r\n            },\r\n        },\r\n        colors: colors,\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: \"45%\",\r\n                distributed: true,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        legend: {\r\n            show: false,\r\n        },\r\n        xaxis: {\r\n            categories: [\r\n                [\"John\", \"Doe\"],\r\n                [\"Joe\", \"Smith\"],\r\n                [\"Jake\", \"Williams\"],\r\n                \"Amber\",\r\n                [\"Peter\", \"Brown\"],\r\n                [\"Mary\", \"Evans\"],\r\n                [\"David\", \"Wilson\"],\r\n                [\"Lily\", \"Roberts\"],\r\n            ],\r\n            labels: {\r\n                style: {\r\n                    colors: colors,\r\n                    fontSize: \"12px\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nconst dynamicQuarterLoadedChart = {\r\n    series: [{\r\n        name: \"quarter\",\r\n        data: [],\r\n    },],\r\n    chartOptions: {\r\n        chart: {\r\n            id: \"barQuarter\",\r\n            height: 400,\r\n            width: \"100%\",\r\n            type: \"bar\",\r\n            stacked: true,\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: \"50%\",\r\n                horizontal: false,\r\n            },\r\n        },\r\n        legend: {\r\n            show: false,\r\n        },\r\n        grid: {\r\n            yaxis: {\r\n                lines: {\r\n                    show: false,\r\n                },\r\n            },\r\n            xaxis: {\r\n                lines: {\r\n                    show: true,\r\n                },\r\n            },\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                show: false,\r\n            },\r\n        },\r\n        title: {\r\n            text: \"Quarterly Results\",\r\n            offsetX: 10,\r\n        },\r\n        tooltip: {\r\n            x: {\r\n                formatter: function (val, opts) {\r\n                    return opts.w.globals.seriesNames[opts.seriesIndex];\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\n// Grouped Stacked Columns\r\nconst groupedStackedChart = {\r\n    series: [\r\n        {\r\n            name: 'Q1 Budget',\r\n            group: 'budget',\r\n            data: [44000, 55000, 41000, 67000, 22000, 43000]\r\n        },\r\n        {\r\n            name: 'Q1 Actual',\r\n            group: 'actual',\r\n            data: [48000, 50000, 40000, 65000, 25000, 40000]\r\n        },\r\n        {\r\n            name: 'Q2 Budget',\r\n            group: 'budget',\r\n            data: [13000, 36000, 20000, 8000, 13000, 27000]\r\n        },\r\n        {\r\n            name: 'Q2 Actual',\r\n            group: 'actual',\r\n            data: [20000, 40000, 25000, 10000, 12000, 28000]\r\n        }\r\n    ],\r\n    chartOptions: {\r\n        chart: {\r\n            type: 'bar',\r\n            height: 350,\r\n            stacked: true,\r\n        },\r\n        stroke: {\r\n            width: 1,\r\n            colors: ['#fff']\r\n        },\r\n        dataLabels: {\r\n            formatter: (val) => {\r\n                return val / 1000 + 'K';\r\n            }\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false\r\n            }\r\n        },\r\n        xaxis: {\r\n            categories: [\r\n                'Online advertising',\r\n                'Sales Training',\r\n                'Print advertising',\r\n                'Catalogs',\r\n                'Meetings',\r\n                'Public relations'\r\n            ]\r\n        },\r\n        fill: {\r\n            opacity: 1\r\n        },\r\n        colors: getChartColorsArray('[\"--vz-success\", \"--vz-primary\",\"--vz-secondary\", \"--vz-danger\"]'),\r\n        yaxis: {\r\n            labels: {\r\n                formatter: (val) => {\r\n                    return val / 1000 + 'K';\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'left'\r\n        }\r\n    },\r\n};\r\n\r\n// Dumbbell Chart\r\nconst dumbbellChart = {\r\n    series: [\r\n        {\r\n            data: [\r\n                {\r\n                    x: '2008',\r\n                    y: [2800, 4500]\r\n                },\r\n                {\r\n                    x: '2009',\r\n                    y: [3200, 4100]\r\n                },\r\n                {\r\n                    x: '2010',\r\n                    y: [2950, 7800]\r\n                },\r\n                {\r\n                    x: '2011',\r\n                    y: [3000, 4600]\r\n                },\r\n                {\r\n                    x: '2012',\r\n                    y: [3500, 4100]\r\n                },\r\n                {\r\n                    x: '2013',\r\n                    y: [4500, 6500]\r\n                },\r\n                {\r\n                    x: '2014',\r\n                    y: [4100, 5600]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    chartOptions: {\r\n        chart: {\r\n            height: 350,\r\n            type: 'rangeBar',\r\n            zoom: {\r\n                enabled: false\r\n            }\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                isDumbbell: true,\r\n                columnWidth: 3,\r\n                dumbbellColors: getChartColorsArray('[\"--vz-success\", \"--vz-primary\"]'),\r\n            }\r\n        },\r\n        legend: {\r\n            show: true,\r\n            showForSingleSeries: true,\r\n            position: 'top',\r\n            horizontalAlign: 'left',\r\n            customLegendItems: ['Product A', 'Product B']\r\n        },\r\n        fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n                type: 'vertical',\r\n                gradientToColors: ['#00E396'],\r\n                inverseColors: true,\r\n                stops: [0, 100]\r\n            }\r\n        },\r\n        grid: {\r\n            xaxis: {\r\n                lines: {\r\n                    show: true\r\n                }\r\n            },\r\n            yaxis: {\r\n                lines: {\r\n                    show: false\r\n                }\r\n            }\r\n        },\r\n        xaxis: {\r\n            tickPlacement: 'on'\r\n        }\r\n    }\r\n};\r\n\r\nexport {\r\n    basicColumnChart,\r\n    columnDatalabelChart,\r\n    stackedColumnsChart,\r\n    columnStackedChart,\r\n    columnMarkersChart,\r\n    columnRotatedLabel,\r\n    columnNegativeChart,\r\n    rangeColumnChart,\r\n    chartYearOption,\r\n    quarterChartOption,\r\n    distributedColumnchart,\r\n    dynamicQuarterLoadedChart,\r\n    groupedStackedChart,\r\n    dumbbellChart\r\n};","import { render } from \"./index.vue?vue&type=template&id=1f7fefb8\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\r\nexport default {\r\n  components: {},\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    pageTitle: {\r\n      type: String,\r\n      default: \"\",\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<template>\r\n  <BRow>\r\n    <BCol cols=\"12\">\r\n      <div class=\"page-title-box d-sm-flex align-items-center justify-content-between\">\r\n        <h4 class=\"mb-sm-0\">{{ title }}</h4>\r\n        <div class=\"page-title-right\">\r\n          <ol class=\"breadcrumb m-0\">\r\n            <li class=\"breadcrumb-item\">\r\n              <BLink href=\"javascript: void(0);\">{{ pageTitle }}</BLink>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">{{ title }}</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </BCol>\r\n  </BRow>\r\n</template>\r\n","import { render } from \"./page-header.vue?vue&type=template&id=ed74b3da\"\nimport script from \"./page-header.vue?vue&type=script&lang=js\"\nexport * from \"./page-header.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["getChartColorsArray","colors","JSON","parse","map","value","newValue","replace","indexOf","color","getComputedStyle","document","documentElement","getPropertyValue","val","split","length","rgbaColor","id","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","pageTitle","_component_BRow","_component_BCol","lg","_component_BCard","_component_BCardHeader","class","_component_BCardTitle","_cache","_component_BCardBody","_component_apexchart","height","dir","series","$data","basicColumnChart","options","chartOptions","columnDatalabelChart","stackedColumnsChart","columnStackedChart","xl","groupedStackedChart","dumbbellChart","columnMarkersChart","columnRotatedLabel","columnNegativeChart","rangeColumnChart","_createElementVNode","_hoisted_1","_hoisted_2","type","ref","chartYearOption","_hoisted_3","dynamicQuarterLoadedChart","distributedColumnchart","name","data","chart","toolbar","show","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","width","xaxis","categories","yaxis","text","grid","borderColor","fill","opacity","tooltip","y","formatter","position","offsetY","style","fontSize","labels","axisBorder","axisTicks","crosshairs","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","shade","shadeIntensity","gradientToColors","undefined","inverseColors","floating","align","fontWeight","stacked","zoom","responsive","breakpoint","legend","offsetX","borderRadius","stackType","x","goals","strokeWidth","strokeColor","showForSingleSeries","customLegendItems","markers","fillColors","annotations","points","seriesIndex","label","background","rotate","tickPlacement","ranges","from","to","toFixed","makeData","dataSet","shuffleArray","arrayData","dataYearSeries","quarters","array","i","j","Math","floor","random","temp","updateQuarterChart","sourceChart","destChartIDToUpdate","w","globals","selectedDataPoints","selectedPoints","selectedIndex","yearSeries","config","push","window","ApexCharts","exec","events","dataPointSelection","e","opts","quarterChartEl","querySelector","yearChartEl","classList","contains","add","remove","updated","distributed","barHeight","textAnchor","opt","dataPointIndex","dropShadow","states","normal","filter","active","allowMultipleDataPointsSelection","subtitle","quarterChartOption","lines","seriesNames","click","group","horizontalAlign","isDumbbell","dumbbellColors","components","Layout","PageHeader","__exports__","render","cols","_toDisplayString","$props","_hoisted_4","_hoisted_5","_component_BLink","href","_hoisted_6","props","String","default"],"sourceRoot":""}