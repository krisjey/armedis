{"version":3,"file":"js/8065.653ee70f.js","mappings":"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","sources":["webpack://velzon/./src/common/getChartColorsArray.js","webpack://velzon/./src/views/charts/chartjs/index.vue","webpack://velzon/./node_modules/@kurkle/color/dist/color.esm.js","webpack://velzon/./node_modules/chart.js/dist/chunks/helpers.dataset.js","webpack://velzon/./node_modules/chart.js/dist/chart.js","webpack://velzon/./node_modules/@j-t-mcc/vue3-chartjs/dist/vue3-chartjs.es.js","webpack://velzon/./src/views/charts/chartjs/data.js","webpack://velzon/./src/views/charts/chartjs/index.vue?00f7","webpack://velzon/./src/components/page-header.vue","webpack://velzon/./src/components/page-header.vue?46f7"],"sourcesContent":["const getChartColorsArray = (colors) => {\r\n    colors = JSON.parse(colors);\r\n    return colors.map(function (value) {\r\n        var newValue = value.replace(\" \", \"\");\r\n        if (newValue.indexOf(\",\") === -1) {\r\n            var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\r\n            if (color) {\r\n                color = color.replace(\" \", \"\");\r\n                return color;\r\n            }\r\n            else return newValue;\r\n        } else {\r\n            var val = value.split(',');\r\n            if (val.length == 2) {\r\n                var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\r\n                rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\r\n                return rgbaColor;\r\n            } else {\r\n                return newValue;\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nexport default getChartColorsArray;","<script>\r\nimport Layout from \"../../../layouts/main\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport Vue3ChartJs from \"@j-t-mcc/vue3-chartjs\";\r\n\r\nimport { line, pie, Doughnut, radar, bar, PolarArea } from \"./data\";\r\n\r\n/**\r\n * Chartjs-chart component\r\n */\r\nexport default {\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n    Vue3ChartJs,\r\n  },\r\n  data() {\r\n    return {\r\n      line: line,\r\n      pie: pie,\r\n      Doughnut: Doughnut,\r\n      radar: radar,\r\n      bar: bar,\r\n      PolarArea: PolarArea,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader title=\"Chartjs\" pageTitle=\"Charts\" />\r\n    <BRow>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardBody>\r\n            <BCardTitle class=\"mb-4\">Line Chart</BCardTitle>\r\n            <vue3-chart-js class=\"chartjs-chart\" v-bind=\"{ ...line }\"></vue3-chart-js>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardBody>\r\n            <BCardTitle class=\"mb-4\">Bar Chart</BCardTitle>\r\n\r\n            <vue3-chart-js class=\"chartjs-chart\" v-bind=\"{ ...bar }\"></vue3-chart-js>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n    </BRow>\r\n\r\n    <BRow>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardBody>\r\n            <BCardTitle class=\"mb-4\">Pie Chart</BCardTitle>\r\n\r\n            <vue3-chart-js :height=\"140\" class=\"chartjs-chart\" v-bind=\"{ ...pie }\"></vue3-chart-js>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardBody>\r\n            <BCardTitle class=\"mb-4\">Donut Chart</BCardTitle>\r\n\r\n            <vue3-chart-js :height=\"140\" class=\"chartjs-chart\" v-bind=\"{ ...Doughnut }\"></vue3-chart-js>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n    </BRow>\r\n\r\n    <BRow>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardBody>\r\n            <BCardTitle class=\"mb-4\">Polar area Chart</BCardTitle>\r\n\r\n            <vue3-chart-js :height=\"140\" class=\"chartjs-chart\" v-bind=\"{ ...PolarArea }\"></vue3-chart-js>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n      <BCol lg=\"6\">\r\n        <BCard no-body>\r\n          <BCardBody>\r\n            <BCardTitle class=\"mb-4\">Radar Chart</BCardTitle>\r\n\r\n            <vue3-chart-js :height=\"140\" class=\"chartjs-chart\" v-bind=\"{ ...radar }\"></vue3-chart-js>\r\n          </BCardBody>\r\n        </BCard>\r\n      </BCol>\r\n    </BRow>\r\n  </Layout>\r\n</template>","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nimport { defineComponent, ref, onMounted, h } from \"vue\";\nimport { registerables, Chart } from \"chart.js\";\nconst chartJsEventNames = [\n  \"install\",\n  \"start\",\n  \"stop\",\n  \"beforeInit\",\n  \"afterInit\",\n  \"beforeUpdate\",\n  \"afterUpdate\",\n  \"beforeElementsUpdate\",\n  \"reset\",\n  \"beforeDatasetsUpdate\",\n  \"afterDatasetsUpdate\",\n  \"beforeDatasetUpdate\",\n  \"afterDatasetUpdate\",\n  \"beforeLayout\",\n  \"afterLayout\",\n  \"afterLayout\",\n  \"beforeRender\",\n  \"afterRender\",\n  \"resize\",\n  \"destroy\",\n  \"uninstall\",\n  \"afterTooltipDraw\",\n  \"beforeTooltipDraw\"\n];\nfunction generateEventObject(type, chartRef = null) {\n  return {\n    type,\n    chartRef,\n    preventDefault() {\n      this._defaultPrevented = true;\n    },\n    isDefaultPrevented() {\n      return !this._defaultPrevented;\n    },\n    _defaultPrevented: false\n  };\n}\nfunction generateChartJsEventListener(emit, event) {\n  return {\n    [event.type]: () => {\n      emit(event.type, event);\n      return event.isDefaultPrevented();\n    }\n  };\n}\nif (registerables !== void 0) {\n  Chart.register(...registerables);\n}\nconst Vue3ChartJs = defineComponent({\n  name: \"Vue3ChartJs\",\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    height: {\n      type: Number,\n      required: false,\n      default: null\n    },\n    width: {\n      type: Number,\n      required: false,\n      default: null\n    },\n    data: {\n      type: Object,\n      required: true\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    plugins: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: chartJsEventNames,\n  setup(props, { emit }) {\n    const chartRef = ref(null);\n    const chartJsEventsPlugin = chartJsEventNames.reduce((reduced, eventType) => {\n      const event = generateEventObject(eventType, chartRef);\n      return __spreadValues(__spreadValues({}, reduced), generateChartJsEventListener(emit, event));\n    }, { id: \"Vue3ChartJsEventHookPlugin\" });\n    const chartJSState = {\n      chart: null,\n      plugins: [\n        chartJsEventsPlugin,\n        ...props.plugins\n      ],\n      props: __spreadValues({}, props)\n    };\n    const destroy = () => {\n      if (chartJSState.chart) {\n        chartJSState.chart.destroy();\n        chartJSState.chart = null;\n      }\n    };\n    const update = (animateSpeed = 750) => {\n      chartJSState.chart.data = __spreadValues(__spreadValues({}, chartJSState.chart.data), chartJSState.props.data);\n      chartJSState.chart.options = __spreadValues(__spreadValues({}, chartJSState.chart.options), chartJSState.props.options);\n      chartJSState.chart.update(animateSpeed);\n    };\n    const resize = () => chartJSState.chart && chartJSState.chart.resize();\n    const render = () => {\n      if (chartJSState.chart) {\n        return chartJSState.chart.update();\n      }\n      return chartJSState.chart = new Chart(chartRef.value.getContext(\"2d\"), {\n        type: chartJSState.props.type,\n        data: chartJSState.props.data,\n        options: chartJSState.props.options,\n        plugins: chartJSState.plugins\n      });\n    };\n    onMounted(() => render());\n    return {\n      chartJSState,\n      chartRef,\n      render,\n      resize,\n      update,\n      destroy\n    };\n  },\n  render(props) {\n    return h(\"canvas\", {\n      ref: \"chartRef\",\n      height: props.height,\n      width: props.width\n    });\n  }\n});\nconst _sfc_main = Vue3ChartJs;\n_sfc_main.registerGlobalPlugins = (plugins) => {\n  Chart.register(...plugins);\n};\n_sfc_main.install = (app, options = {}) => {\n  var _a;\n  app.component(_sfc_main.name, _sfc_main);\n  if ((_a = options == null ? void 0 : options.plugins) == null ? void 0 : _a.length) {\n    _sfc_main.registerGlobalPlugins(options.plugins);\n  }\n};\nexport { _sfc_main as default };\n","import getChartColorsArray from \"@/common/getChartColorsArray\";\r\n\r\nconst line = {\r\n  type: \"line\",\r\n  data: {\r\n    labels: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n    ],\r\n    datasets: [{\r\n        label: \"Sales Analytics\",\r\n        fill: true,\r\n        lineTension: 0.5,\r\n        backgroundColor: getChartColorsArray('[\"--vz-primary-rgb, 0.2\"]'),\r\n        borderColor: getChartColorsArray('[\"--vz-primary\"]'),\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#405189\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#405189\",\r\n        pointHoverBorderColor: \"#fff\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [65, 59, 80, 81, 56, 55, 40, 55, 30, 80],\r\n      },\r\n      {\r\n        label: \"Monthly Earnings\",\r\n        fill: true,\r\n        lineTension: 0.5,\r\n        backgroundColor: getChartColorsArray('[\"--vz-success-rgb, 0.2\"]'),\r\n        borderColor: getChartColorsArray('[\"--vz-success\"]'),\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#0AB39C\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#0AB39C\",\r\n        pointHoverBorderColor: \"#eef0f2\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [80, 23, 56, 65, 23, 35, 85, 25, 92, 36],\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    x: {\r\n      ticks: {\r\n        font: {\r\n          family: 'Poppins',\r\n        },\r\n      },\r\n    },\r\n    y: {\r\n      ticks: {\r\n        font: {\r\n          family: 'Poppins',\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          // This more specific font property overrides the global property\r\n          font: {\r\n            family: 'Poppins',\r\n          }\r\n        }\r\n      },\r\n    },\r\n  },\r\n\r\n};\r\n\r\nconst pie = {\r\n  type: \"pie\",\r\n  data: {\r\n    labels: [\"Desktops\", \"Tablets\"],\r\n    datasets: [{\r\n      data: [300, 180],\r\n      backgroundColor: getChartColorsArray('[\"--vz-success\", \"--vz-light\"]'),\r\n      hoverBackgroundColor: getChartColorsArray('[\"--vz-success\", \"--vz-light\"]'),\r\n      hoverBorderColor: \"#fff\",\r\n    }, ],\r\n  },\r\n  options: {\r\n    maintainAspectRatio: true,\r\n    responsive: true,\r\n  },\r\n};\r\n\r\nconst Doughnut = {\r\n  type: \"doughnut\",\r\n  data: {\r\n    labels: [\"Desktops\", \"Tablets\"],\r\n    datasets: [{\r\n      data: [300, 210],\r\n      backgroundColor: getChartColorsArray('[\"--vz-primary\", \"--vz-light\"]'),\r\n      hoverBackgroundColor: getChartColorsArray('[\"--vz-primary\", \"--vz-light\"]'),\r\n      hoverBorderColor: \"#fff\",\r\n      borderWidth: 0,\r\n      radius: \"90%\",\r\n      innerRadius: \"75%\",\r\n    }, ],\r\n  },\r\n  options: {\r\n    maintainAspectRatio: true,\r\n  },\r\n};\r\n\r\nconst radar = {\r\n  type: 'radar',\r\n  data: {\r\n    labels: [\r\n      'Eating',\r\n      'Drinking',\r\n      'Sleeping',\r\n      'Designing',\r\n      'Coding',\r\n      'Cycling',\r\n      'Running',\r\n    ],\r\n    datasets: [{\r\n        label: 'Desktops',\r\n        backgroundColor: getChartColorsArray('[\"--vz-success-rgb, 0.2\"]'),\r\n        borderColor: getChartColorsArray('[\"--vz-success\"]'),\r\n        pointBackgroundColor: getChartColorsArray('[\"--vz-success\"]'),\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: getChartColorsArray('[\"--vz-success\"]'),\r\n        data: [65, 59, 90, 81, 56, 55, 40],\r\n      },\r\n      {\r\n        label: 'Tablets',\r\n        backgroundColor: getChartColorsArray('[\"--vz-primary-rgb, 0.2\"]'),\r\n        borderColor: getChartColorsArray('[\"--vz-primary\"]'),\r\n        pointBackgroundColor: getChartColorsArray('[\"--vz-primary\"]'),\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: getChartColorsArray('[\"--vz-primary\"]'),\r\n        data: [28, 48, 40, 19, 96, 27, 100],\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    maintainAspectRatio: true,\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n  }\r\n}\r\n\r\nconst bar = {\r\n  type: \"bar\",\r\n  data: {\r\n    labels: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n    ],\r\n    datasets: [{\r\n      barPercentage: 0.4,\r\n      label: \"Sales Analytics\",\r\n      backgroundColor: getChartColorsArray('[\"--vz-primary-rgb, 0.8\"]'),\r\n      borderColor: getChartColorsArray('[\"--vz-primary-rgb, 0.9\"]'),\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: getChartColorsArray('[\"--vz-primary-rgb, 0.9\"]'),\r\n      hoverBorderColor: getChartColorsArray('[\"--vz-primary-rgb, 0.9\"]'),\r\n      data: [65, 59, 81, 45, 56, 80, 50, 20],\r\n    }, ],\r\n  },\r\n  options: {\r\n    x: {\r\n      ticks: {\r\n        font: {\r\n          family: 'Poppins',\r\n        },\r\n      },\r\n    },\r\n    y: {\r\n      ticks: {\r\n        font: {\r\n          family: 'Poppins',\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          font: {\r\n            family: 'Poppins',\r\n          }\r\n        }\r\n      },\r\n    }\r\n  }\r\n};\r\n\r\nconst PolarArea = {\r\n  type: \"polarArea\",\r\n  data: {\r\n    labels: [\"Series 1\", \"Series 2\", \"Series 3\", \"Series 4\"],\r\n    datasets: [{\r\n      data: [11, 16, 7, 18],\r\n      backgroundColor: [\"#f46a6a\", \"#34c38f\", \"#f1b44c\", \"#405189\"],\r\n      label: \"My dataset\", // for legend\r\n      hoverBorderColor: \"#fff\",\r\n    }, ],\r\n  },\r\n  options: {\r\n    maintainAspectRatio: true,\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n  },\r\n};\r\n\r\nexport {\r\n  line,\r\n  pie,\r\n  Doughnut,\r\n  radar,\r\n  bar,\r\n  PolarArea\r\n};","import { render } from \"./index.vue?vue&type=template&id=4aa88d18\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\r\nexport default {\r\n  components: {},\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    pageTitle: {\r\n      type: String,\r\n      default: \"\",\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<template>\r\n  <BRow>\r\n    <BCol cols=\"12\">\r\n      <div class=\"page-title-box d-sm-flex align-items-center justify-content-between\">\r\n        <h4 class=\"mb-sm-0\">{{ title }}</h4>\r\n        <div class=\"page-title-right\">\r\n          <ol class=\"breadcrumb m-0\">\r\n            <li class=\"breadcrumb-item\">\r\n              <BLink href=\"javascript: void(0);\">{{ pageTitle }}</BLink>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">{{ title }}</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </BCol>\r\n  </BRow>\r\n</template>\r\n","import { render } from \"./page-header.vue?vue&type=template&id=ed74b3da\"\nimport script from \"./page-header.vue?vue&type=script&lang=js\"\nexport * from \"./page-header.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["getChartColorsArray","colors","JSON","parse","map","value","newValue","replace","indexOf","color","getComputedStyle","document","documentElement","getPropertyValue","val","split","length","rgbaColor","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","pageTitle","_component_BRow","_component_BCol","lg","_component_BCard","_component_BCardBody","_component_BCardTitle","class","_cache","_component_vue3_chart_js","_mergeProps","$data","line","bar","height","pie","Doughnut","PolarArea","radar","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","weight","c1","c2","w2","p","w1","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNonPrimitive","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","element","ownerDocument","defaultView","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetArea","getDatasetClipArea","_clip","disabled","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","axisID","axisNumber","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipSelf","outerAngleClip","innerAngleClip","clipWidth","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","selfJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","fillColor","clipVertical","clipHorizontal","clipY","lineLoop","clipX","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","__defProp","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","__propIsEnum","propertyIsEnumerable","__defNormalProp","__spreadValues","chartJsEventNames","generateEventObject","chartRef","preventDefault","_defaultPrevented","isDefaultPrevented","generateChartJsEventListener","emit","Vue3ChartJs","required","default","emits","setup","chartJsEventsPlugin","reduced","eventType","chartJSState","animateSpeed","ref","_sfc_main","registerGlobalPlugins","install","app","_a","lineTension","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","components","Layout","PageHeader","__exports__","cols","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","$props","_hoisted_3","_hoisted_4","_hoisted_5","_component_BLink","href","_hoisted_6"],"sourceRoot":""}